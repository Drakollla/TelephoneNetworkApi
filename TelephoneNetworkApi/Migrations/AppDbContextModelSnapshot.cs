// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelephoneNetworkApi.Persistence;

#nullable disable

namespace TelephoneNetworkApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.AtsSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutomaticTelephoneExchangeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutomaticTelephoneExchangeId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("AtsSubscriber");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            AutomaticTelephoneExchangeId = 78,
                            SubscriberId = 101
                        });
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.AutomaticTelephoneExchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountSubscriber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AutomaticTelephoneExchange", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 78,
                            CountSubscriber = 10000,
                            Name = "Телефонная сеть №15",
                            Town = "Витебск"
                        });
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.RegistrySubscriptionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("IntecityMinuteCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<int>("Mounth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<byte>("TownshipMinuteCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<int>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2023);

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.ToTable("RegistrySubscriptionPayment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 99,
                            IntecityMinuteCount = (byte)0,
                            Mounth = 0,
                            Price = 0.25m,
                            SubscriberId = 101,
                            TownshipMinuteCount = (byte)5,
                            Year = 0
                        },
                        new
                        {
                            Id = 100,
                            IntecityMinuteCount = (byte)0,
                            Mounth = 0,
                            Price = 0.35m,
                            SubscriberId = 100,
                            TownshipMinuteCount = (byte)7,
                            Year = 0
                        });
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsIntercityOpen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Subscribers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            IsIntercityOpen = false,
                            Name = "Василий",
                            PhoneNumber = "23-56-78",
                            SecondName = "Пупкин",
                            Surname = "Петрович"
                        },
                        new
                        {
                            Id = 101,
                            IsIntercityOpen = false,
                            Name = "Иван",
                            PhoneNumber = "13-56-78",
                            SecondName = "Иванов",
                            Surname = "Иванович"
                        });
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.AtsSubscriber", b =>
                {
                    b.HasOne("TelephoneNetworkApi.Domain.Models.AutomaticTelephoneExchange", "AutomaticTelephoneExchange")
                        .WithMany("AtsSubscribers")
                        .HasForeignKey("AutomaticTelephoneExchangeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TelephoneNetworkApi.Domain.Models.Subscriber", "Subscriber")
                        .WithMany("AtsSubscribers")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AutomaticTelephoneExchange");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.RegistrySubscriptionPayment", b =>
                {
                    b.HasOne("TelephoneNetworkApi.Domain.Models.Subscriber", "Subscriber")
                        .WithMany("RegistrySubscriptionPayments")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.AutomaticTelephoneExchange", b =>
                {
                    b.Navigation("AtsSubscribers");
                });

            modelBuilder.Entity("TelephoneNetworkApi.Domain.Models.Subscriber", b =>
                {
                    b.Navigation("AtsSubscribers");

                    b.Navigation("RegistrySubscriptionPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
